// Code generated by mockery v1.0.0. DO NOT EDIT.

package protocol

import mock "github.com/stretchr/testify/mock"

// MockConn is an autogenerated mock type for the Conn type
type MockConn struct {
	mock.Mock
}

// LogMessage provides a mock function with given fields: params
func (_m *MockConn) LogMessage(params *LogMessageParams) {
	_m.Called(params)
}

// Notify provides a mock function with given fields: method, params
func (_m *MockConn) Notify(method string, params interface{}) error {
	ret := _m.Called(method, params)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(method, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PublishDiagnostics provides a mock function with given fields: params
func (_m *MockConn) PublishDiagnostics(params *PublishDiagnosticsParams) error {
	ret := _m.Called(params)

	var r0 error
	if rf, ok := ret.Get(0).(func(*PublishDiagnosticsParams) error); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RegisterCapability provides a mock function with given fields: params
func (_m *MockConn) RegisterCapability(params *RegistrationParams) error {
	ret := _m.Called(params)

	var r0 error
	if rf, ok := ret.Get(0).(func(*RegistrationParams) error); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ShowMessage provides a mock function with given fields: params
func (_m *MockConn) ShowMessage(params *ShowMessageParams) {
	_m.Called(params)
}
